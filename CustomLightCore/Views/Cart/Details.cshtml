@model CustomLightCore.ViewModels.Cart.CartViewModel
@{
    ViewData["Title"] = "Корзина. Оформление заказа.";
    Layout = "~/Views/_Layouts/_Main.cshtml";
}

<div class="col-md-10">
    <h1>Корзина.</h1>
    <h2>Оформление заказа.</h2>


    @*foreach*@
    @for (var i = 0; i < Model.Specifications.Count; i++)
            {
        <div class="table-responsive">
            <table class="table table-bordered table-hover">

                <!--Товары-->
                <tbody>
                @*заголовки*@
                <tr>
                    <th>@Html.DisplayNameFor(model => model.Specifications[i].Product.Icon)</th>
                    <th>@Html.DisplayNameFor(model => model.Specifications[i].Product.Name)</th>
                    @foreach (var specificationValue in Model.Specifications[i].SpecificationValues)
                    {
                        <th>@specificationValue.SpecificationTitle.Name</th>
                    }
                    <th>Цена</th>
                    <th>Количество</th>
                    <th>Действия</th>
                </tr>
                @*спецификация*@
                <tr>
                    <td>
                        <a asp-controller="Products" asp-action="Details" asp-route-id="@Model.Specifications[i].Product.Id"><img src="@Url.Action("GetProductIcon", "Products", new { Model.Specifications[i].Product.Id })" alt="Model.Specifications[i].Product.Name" class="list-preview-image" /></a>
                    </td>
                    <td>                        
                        @Html.DisplayFor(model => model.Specifications[i].Product.Name)<br/>
                        (@Html.DisplayFor(model => model.Specifications[i].Product.ProductType.Name))
                    </td>
                    @Html.HiddenFor(model => Model.Specifications.ToList()[i].Id)
                    @foreach (var specificationValue in Model.Specifications[i].SpecificationValues)
                    {
                        <td>@Html.DisplayFor(model => specificationValue.Value)</td>
                    }
                    <td>@Html.DisplayFor(model => model.Specifications.ToList()[i].Price)</td>
                    <td>
                        @Html.EditorFor(model => model.SpecificationQuantities.FirstOrDefault(sq => sq.Key == Model.Specifications.ToList()[i].Id).Value)
                        @*<input type="number" min="0" name="specificationQuantity_@Model.Specifications.ToList()[i].Id" id="specificationQuantity_@Model.Specifications.ToList()[i].Id" value=""/>*@
                        @*<i class="fa fa-cart-arrow-down add-to-cart" id="add-to-cart-@Model.Specifications.ToList()[i].Id" aria-hidden="true"></i>*@
                    </td>
                    <td>
                        <a href=""><i class="fa fa-repeat" aria-hidden="true"></i>Пересчитать</a> |
                        <a href=""><i class="fa fa-times" aria-hidden="true"></i>Удалить</a>
                    </td>
                </tr>
                </tbody>
                <!--/Товары-->
            </table>
            <br />
        </div>
    }



    <p class="cart-grand-total">
    <p>Общее количество: @Html.DisplayFor(m => m.TotalQuantity)</p>
    <br />
    <p>Стоимость: @Html.DisplayFor(m => m.TotalPrice)</p>
    </p>

    <input type="button" class="cart-wipe-button" value="Очистить корзину!">

    <h3>Информация по заказу:</h3>
    <form class="checkout" id="checkout">
        <fieldset class="form-group">
            <legend class="h-line-reverse">Способ доставки:</legend>
            <div class="form-check">
                <label class="cartDelivery1">
                    <input type="radio" class="form-check-input" name="cartDelivery" id="cartDelivery1"
                           value="Самовывоз" checked>
                    Самовывоз.
                </label>
            </div>
            <div class="form-check">
                <label class="cartDelivery2">
                    <input type="radio" class="form-check-input" name="cartDelivery" id="cartDelivery2"
                           value="Доставка">
                    Доставка.
                </label>
            </div>
        </fieldset>
        <div class="form-group">
            <label for="cartName">ФИО</label>
            <input type="email" class="form-control" id="cartName" name="cartName" placeholder="Ваше имя" required>
        </div>
        <div class="form-group">
            <label for="cartPhoneNumber">Телефон</label>
            <input type="tel" class="form-control" id="cartPhoneNumber" placeholder="Ваш телефон" required>
        </div>
        <div class="form-group">
            <label for="cartEmail">E-mail</label>
            <input type="email" class="form-control" id="cartEmail" placeholder="Ваш e-mail">
        </div>
        <div class="form-group">
            <label for="cartAddress">Адрес доставки</label>
            <textarea class="form-control" id="cartAddress" placeholder="Адрес доставки (кроме варианта 'Самовывоз')"></textarea>
        </div>
        <div class="form-group">
            <label for="cartNotes">Примечание</label>
            <textarea class="form-control" id="cartNotes" placeholder="Примечания к заказу"></textarea>
        </div>
        <button type="button" class="btn btn-primary make-order-button">Заказать</button>
    </form>
</div>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}
