@model CustomLightCore.ViewModels.Products.ProductViewModel

@{
    ViewData["Title"] = "Редактирование Продукта.";
    Layout = "~/Views/_Layouts/_Admin.cshtml";
}

<h2>Редактирование</h2>

<form asp-action="Edit" enctype="multipart/form-data">
    <div class="form-horizontal">
        <h4>Проект</h4>
        <hr />
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <input type="hidden" asp-for="Id" />
        @*@Html.HiddenFor(m => m.ProductTypeId)*@
        <div class="form-group">
            <label asp-for="Name" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="Description" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <textarea asp-for="Description" class="form-control"></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="ShortDescription" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="ShortDescription" class="form-control" />
                <span asp-validation-for="ShortDescription" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <label class="col-md-2 control-label">Текущая иконка</label>
            <div class="col-md-10">
                <img src="@Url.Action("GetProductIcon", "Products", new { Model.Id })" class="img-responsive" alt="@Model.Name">
            </div>
        </div>
        <div class="form-group">
            <label asp-for="Icon" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="Icon" class="form-control" />
                <span asp-validation-for="Icon" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <div class="checkbox">
                    <input asp-for="IsPublished" />
                    <label asp-for="IsPublished"></label>
                </div>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="CategoryProductId" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <select asp-for="CategoryProductId" class="form-control selectpicker" asp-items="ViewBag.Categories"></select>
            </div>
        </div>
        <div id="existing-images">
            @{
                await Html.RenderPartialAsync("_ExistingProductImages");
            }
        </div>
        <div class="form-group">
            <label asp-for="ProductImages" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="ProductImages" class="form-control" multiple />
                <span asp-validation-for="ProductImages" class="text-danger"></span>
            </div>
        </div>

        <div class="form-group">
            <label asp-for="ProductTypeId" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <select asp-for="ProductTypeId" class="form-control" asp-items="ViewBag.ProductTypeId"></select>
            </div>
        </div>

        <div class="form-group">
            <label asp-for="Specifications" class="col-md-2 control-label"></label>
            <div class="table-responsive" id="specifications">
                @{ await Html.RenderPartialAsync("_SpecificationsCreate"); }
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" id="add-specification" class="btn btn-default" value="Добавить спецификацию" />
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Сохранить" class="btn btn-success" />
                @Html.ValidationSummary()
            </div>
        </div>
    </div>
</form>

<div>
    <a asp-action="List" class="btn btn-default">Вернуться к списку</a>
</div>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }

    <script>
        CKEDITOR.replace('Description');
    </script>

    <script>
        $(function () {
            $(document).ready(function () {
                $(".existing-image").click(function() {
                    var form = $('form');
                    var formData = new FormData(form)
                    var imageId = parseInt(this.id.replace("remove-existing-image-", ""));
                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("RemoveExistingImage")",
                        data: form.serialize() + '&imageId=' + imageId,
                        success: function(html) {
                            //console.log(html);
                            $('#existing-images').html(html);
                        },
                        error: function(msg) {
                            console.log(msg);
                        }
                    });
                });
                $("#add-specification").click(function () {
                    var form = $('form');
                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("GenerateSpecification")",
                        data: form.serialize(),
                        success: function (html) {
                            //console.log(html);
                            $('#specifications').html(html);
                        },
                        error: function (msg) {
                            console.log(msg);
                        }
                    });
                });

                $("#ProductTypeId").change(function () {
                    var form = $('form');
                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("UpdateSpecifications")",
                        data: form.serialize(),
                        success: function (html) {
                            //console.log(html);
                            $('#specifications').html(html);
                        },
                        error: function (msg) {
                            console.log(msg);
                        }
                    });
                });

                $(".remove-specification").click(function () {
                    var form = $('form');
                    var specificationIndex = parseInt(this.id.replace("remove-specification-", ""));
                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("RemoveSpecification")",
                        data: form.serialize() + '&specificationIndex=' + specificationIndex,
                        success: function (html) {
                            //console.log(html);
                            $('#specifications').html(html);
                        },
                        error: function (msg) {
                            console.log(msg);
                        }
                    });
                });
            });
        });

    </script>
    
    @*Замена разделителя копеек с . на ,*@
    <script>

        $.validator.methods.range = function (value, element, param) {
            var globalizedValue = value.replace(",", ".");
            return this.optional(element) || (globalizedValue >= param[0] && globalizedValue <= param[1]);
        }

        $.validator.methods.number = function (value, element) {
            return this.optional(element) || /-?(?:\d+|\d{1,3}(?:[\s\.,]\d{3})+)(?:[\.,]\d+)?$/.test(value);
        }
        //Date dd/MM/yyyy
        $.validator.methods.date = function (value, element) {
            var date = value.split("/");
            return this.optional(element) || !/Invalid|NaN/.test(new Date(date[2], date[1], date[0]).toString());
        }
    </script>
}